@Output("color", 0)
shader_name :: "FBO";

@Vertex
vert : *char = """

out vec2 frag_uv;
out vec2 frag_position;
uniform vec2 render_size;
uniform vec4 destination;

void main()
{
    vec2 vertices[] = vec2[](
        vec2(0, 0),
        vec2(0, 1),
        vec2(1, 0),
        vec2(1, 1)
        );
    
    vec2 vert_position = vertices[gl_VertexID];
    
    vec4 screen_position = vec4(vert_position, 0, 1);
    screen_position.xy *= destination.zw;
    screen_position.xy += destination.xy;
    frag_position = screen_position.xy;
    screen_position.xy /= render_size;
    gl_Position = screen_position;
    frag_uv = vert_position.xy;
}

""";

@Fragment
frag : *char = """

in vec2 frag_uv;
in vec2 frag_position;
out vec4 color;
uniform vec2 uv_offset;
uniform vec2 uv_range;
uniform vec4 destination;
uniform vec2 scale;
uniform float opacity;
uniform sampler2D tex;
uniform vec2 tex_resolution;

void main()
{
    vec2 pixel = (uv_offset + (frag_uv * uv_range));
    vec2 sample_uv = floor(pixel) + vec2(0.5, 0.5);
    
    sample_uv.x += 1.0 - clamp((1.0 - fract(pixel.x)) * scale.x, 0.0, 1.0);
    sample_uv.y += 1.0 - clamp((1.0 - fract(pixel.y)) * scale.y, 0.0, 1.0);
    
    color = texture(tex, sample_uv / tex_resolution);
    color.xyz /= color.a;
    if(color.a > 0)
    {
        color *= opacity;
    }
    else
    {
        discard;
    }
}

""";